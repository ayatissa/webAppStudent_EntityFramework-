@*@model DAL.Student*@
@*@model DAL.Student*@
@model IEnumerable<DAL.Student>


@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@using (Html.BeginForm("Index", "Student", FormMethod.Get))
{
    <input type="text" name="search" id="search" />

}

<br />


<label>Total Students:</label> @ViewBag.TotalStudents

<br />
<p>
    @Html.ActionLink("Create New", "Add")
</p>



<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.StudentName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Age)
        </th>
        <th></th>
    </tr>

    @*@if (Model.Students.Count() == 0)
        {
            <tr>
                <td colspan="3" style="color:red">
                    No Match any document
                </td>
            </tr>

        }

        else
        {*@

    @foreach (var item in Model)

    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StudentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.StudentId }) |
                @Html.ActionLink("Details", "Details", new { id = item.StudentId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.StudentId })
            </td>
        </tr>




    }

    @*}*@

</table>



<p>
    @for (int i = 1; i <= ViewBag.TotalPages; i++)
    {
        <a class="@(i == ViewBag.CurrentPage ? "current " : "" ) "
           href="@Url.Action("Index", "Student", new { search = ViewBag.Search , page = i } )">@i</a>
    }
</p>
